<?php

$directory = __DIR__;

// Вызываем функцию для подсчета количества строк кода и символов
$linesAndCharacters = countLinesAndCharacters($directory);

// Выводим результаты
echo "Общее количество строк кода: {$linesAndCharacters['lines']}\n";
echo "Общее количество символов: {$linesAndCharacters['characters']}\n";

/**
 * Функция для подсчета количества строк кода и символов в указанной директории и ее поддиректориях
 *
 * @param string $directory Директория
 * @return array Ассоциативный массив с количеством строк кода и символов
 */
function countLinesAndCharacters(string $directory): array
{
    // Инициализируем переменные для хранения общего количества строк и символов
    $totalLines = 0;
    $totalCharacters = 0;

    // Получаем список файлов и папок в указанной директории
    $files = scandir($directory);

    // Обходим каждый файл и папку
    foreach ($files as $file) {
        // Пропускаем "." и ".." и папку "vendor"
        if (in_array($file, ['.', '..', 'vendor'])) {
            continue;
        }

        // Формируем путь к файлу или папке
        $path = $directory . '/' . $file;

        // Если это папка, рекурсивно вызываем функцию для подсчета строк и символов внутри папки
        if (is_dir($path)) {
            $linesAndCharacters = countLinesAndCharacters($path);
            // Увеличиваем общее количество строк и символов на значения внутри папки
            $totalLines += $linesAndCharacters['lines'];
            $totalCharacters += $linesAndCharacters['characters'];
        }

        // Получаем расширение файла
        $extension = pathinfo($path, PATHINFO_EXTENSION);

        // Если это PHP файл, подсчитываем количество строк и символов
        if ($extension === 'php') {
            // Подсчитываем количество строк
            $lines = count(file($path));
            // Подсчитываем количество символов
            $characters = filesize($path);
            // Увеличиваем общее количество строк и символов на значения в текущем файле
            $totalLines += $lines;
            $totalCharacters += $characters;
        }
    }

    // Возвращаем результаты подсчета в виде ассоциативного массива
    return [
        'lines' => $totalLines,
        'characters' => $totalCharacters,
    ];
}
